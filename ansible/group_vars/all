---
# These parameters apply to all hosts. While this would normally be
#  put in as host_vars, the IP address of the device will be different
#  for each deployment, so it's easier to put it here.

# Parameterised to allow overriding during CI builds, where we want to
#  test some client-facing capabilities but do not have a wifi interface
client_facing_if: "wlan0"
# Unset country code. Operators should override with their country, based
#  on the entries in the following file:
# https://git.kernel.org/cgit/linux/kernel/git/sforshee/wireless-regdb.git/tree/db.txt
wireless_country_code: "00"

connectbox_web_root: /var/www/connectbox
connectbox_default_content_root: "{{ connectbox_web_root }}/connectbox_default"
connectbox_admin_root: "{{ connectbox_web_root }}/admin"
connectbox_config_root: /etc/connectbox
connectbox_usb_files_root: /media/usb0
connectbox_admin_credentials: admin:$apr1$CBOXFOO2$usYeNWIKOX910UnI/jugh.
connectbox_default_hostname: connectbox.local

# Make sure we show index.html for 404, given we'll be sent here by
#  people browsing for all sorts of things
nginx_vhosts:
  - listen: "*:80 default_server"
    server_name: "_"
    extra_parameters: |
      rewrite_log on;
      # Simulate internet access for iOS and MacOSX pre-yosemite so we
      #  can exit their captive portal browser.
      # See: https://forum.piratebox.cc/read.php?9,8927
      # No need to check for user agent, because the default server is not
      #  a part of serving the connectbox interface, so we don't need to avoid
      #  name clashes.
      location /success.html {
        root "{{ connectbox_default_content_root }}";
      }
      # Simulate internet access for MacOSX Yosemite and later, so we
      #  can exit their captive portal browser
      # See: https://apple.stackexchange.com/questions/45418/how-to-automatically-login-to-captive-portals-on-os-x#
      # No need to check for user agent, because the default server is not
      #  a part of serving the connectbox interface, so we don't need to avoid
      #  name clashes.
      location /hotspot-detect.html {
        root "{{ connectbox_default_content_root }}";
      }

      # Simulate internet access for Android so we can exit their
      #  captive portal.
      #  See: https://www.chromium.org/chromium-os/chromiumos-design-docs/network-portal-detection
      # Required in the default_server to avoid sending a 302 when we
      #  actually need a 204
      location /generate_204 {
        return 204;
      }
      # Android 7 introduced a fallback method for captive portal detection.
      # Let's support that too.
      # https://android.googlesource.com/platform/frameworks/base/+/master/services/core/java/com/android/server/connectivity/NetworkMonitor.java#92
      location /gen_204 {
        return 204;
      }
      # Exit Amazon kindle captive portal detection
      location = /kindle-wifi/wifistub.html {
        root "/var/www/connectbox/connectbox_default";
      }

      # Simulate interet access for Windows so we can exit their captive
      #  portal browser.
      # See: https://technet.microsoft.com/en-us/library/cc766017(v=ws.10).aspx
      location /ncsi.txt {
        root "{{ connectbox_default_content_root }}";
      }

      # Disable Facebook messenger connectivity check
      location /mobile/status.php {
        return 204;
      }

      # Default - bounce to the real server definition
      location / {
        return 302 http://$hostname;
      }
  - listen: "80"
    server_name: "$hostname"
    index: index.html
    root: "{{ connectbox_default_content_root }}"
    error_page: "404 /index.html"
    access_log: "/var/log/nginx/connectbox-access.log"
    error_log: "/var/log/nginx/connectbox-error.log"
    extra_parameters: |
      rewrite_log on;

      # Admin interface
      location /admin {
        root {{ connectbox_web_root }};
        auth_basic "Access Denied";
        auth_basic_user_file /usr/local/connectbox/etc/basicauth;
      }

      # Admin worker scripts
      # pass the PHP scripts to FastCGI server via unix domain socket
      location ~ ^/admin/(?<script_name>.+\.php)(?<path_info>/.+)$ {
        root {{ connectbox_web_root }};
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$script_name;
        fastcgi_param PATH_INFO $path_info;
        fastcgi_param PATH_TRANSLATED $document_root$path_info;
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        auth_basic "Access Denied";
        auth_basic_user_file /usr/local/connectbox/etc/basicauth;
      }

      location /content/ {
        alias {{ connectbox_usb_files_root }}/share/;
        autoindex on;
        autoindex_format json;
        charset utf-8;
        charset_types application/json;
      }

# We want to set the default server. Remove the default server that
#  nginx provides.
nginx_remove_default_vhost: true
# Use backports for nginx installation
nginx_default_release: jessie-backports
# i.e. allow inbound ssh from all interfaces
# Overriden in bootstrap role for non-developer mode
iptables_ssh_in_interface: ""

firewall_v4_group_rules:
  150 redirect http:
    - -t nat -A PREROUTING -s {{ client_facing_if_network_cidr }} tcp --dport 80 -j DNAT --to {{ client_facing_if_ip_address }}:80
  # Overriding default - we only want ssh on the wired interface
  200 allow ssh:
    - -A INPUT -p tcp {{ iptables_ssh_in_interface }} --dport ssh -j ACCEPT
  300 allow dhcp:
    - -A INPUT -p udp --dport bootps -j ACCEPT
  350 allow dns:
    - -A INPUT -p udp --dport domain -j ACCEPT
    - -A INPUT -p tcp --dport domain -j ACCEPT
  400 allow web traffic:
    - -A INPUT -p tcp --dport http -j ACCEPT
